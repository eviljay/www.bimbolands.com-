var host = location.host;
if (host == '127.0.0.1') {
	var local_dir = '/bimbo';
}
else {
	var local_dir = '';
}

	

function removeItemConfirmation(item_id, can_buy)
{
	dress_item = inventory[item_id];
	
	jQuery(document).foundation('reveal', 'reflow');
	
	
	if(can_buy >= 1) {

		jQuery('#b-remove-item-confirmation .b-dress-image').html('');
		jQuery("<img/>").attr("src",dress_item["src"]).appendTo('#b-remove-item-confirmation .b-dress-image');

                if(can_buy == 777) 
                {
                    jQuery('#b-remove-item-confirmation .b-dress-info').html('Do you want to remove <b> '+dress_item['n']+'</b>?');
                }
                else
                {
                    jQuery('#b-remove-item-confirmation .b-dress-info').html('Do you want to remove <b> '+dress_item['n']+'</b> for the price of <b>1000 B$</b>?');
                }
		jQuery('#b-remove-item-confirmation #remove_item_id').val(dress_item['id']);

		jQuery('#b-remove-item-confirmation .b-button-confirm').show();
		jQuery('#b-remove-item-confirmation .b-button-treasury').hide();
		
	} else {
	
		jQuery('#b-remove-item-confirmation .b-dress-image').html('');
		jQuery("<img/>").attr("src",dress_item["src"]).appendTo('#b-remove-item-confirmation .b-dress-image');

		jQuery('#b-remove-item-confirmation .b-dress-info').html('You have insufficient funds to buy this item. Please top up your account.');
		jQuery('#b-remove-item-confirmation #remove_item_id').val('???');

		jQuery('#b-remove-item-confirmation .b-button-confirm').hide();
		jQuery('#b-remove-item-confirmation .b-button-treasury').show();
	
	}

}


// loading batch of items
function modified10jun2015_chooseDressType(id, section, page, type_name)
{
	var add = '';
	if (section != '') add = '_Shop';

	page = typeof page !== 'undefined' ? page : 1;

	if (section != '')
	{
		var new_url = local_dir+"/"+section+"/"+type_name;
	}
	else
	{
		var new_url = local_dir+"/my-bimbo/dressing-room"+"/"+type_name;
	}

	if (page > 1)
	{
		new_url += '?page='+page
	}

	jQuery.get(local_dir+"/dressing/ajaxLoadDressType"+add, {id: id, page: page, section: section}, function( data ) {
	  
		//jQuery(document.body).scrollTop($('#dressing-ajax-container').offset().top); // Commented otherwise broswer position jumps after each display change
		
		jQuery("#dressing-ajax-container").html(data);
		jQuery('#sort-items-container').show();
		jQuery('#dress-type-id').val(id);

		var stateObj =  {id: id, page: page, section: section, type_name: type_name, view: 'dressing'};
		window.history.pushState(stateObj, "Title", new_url);
		//console.log(history.length);
		
	});
}

function modified10jun2015_loadDressTypeList(section)
{
	if (section != '')
	{
		var new_url = local_dir+"/"+section;
	}
	else
	{
		var new_url = local_dir+"/my-bimbo/dressing-room";
	}

	jQuery.get(local_dir+"/dressing/ajaxLoadDressTypeList", {section: section}, function( data ) {
	  jQuery("#dressing-ajax-container").html(data);
		jQuery('#sort-items-container').hide();

		var stateObj =  {section: section, view: 'dressing_types'};
		
		window.history.pushState(stateObj, "Title", new_url);
	});
}

function modified10jun2015_putItemOnBimbo(item_id)
{
	dress_item = inventory[item_id];

        if (dress_item["t"] != 106)
        {
            jQuery("div.part_"+dress_item['t'], "#bimbo-avatar").remove();
        }
        
	var nd=jQuery("<div/>");						// opening new div

	nd.appendTo('#bimbo-avatar');								// new item
	nd.css
	(
		{
			"position":"absolute",					// new items specs
			"width":dress_item["w"]+"px",
			"height":dress_item["h"]+"px",
			"left":dress_item["x"]+"px",
			"top":dress_item["y"]+"px",
			"zIndex":dress_item["z"]
		}
	);
	nd.addClass("part_"+dress_item["t"]);
	nd.addClass("part");
	jQuery("<img/>").attr("src",dress_item["src"]).appendTo(nd);
	jQuery("<input/>").attr("type","hidden").attr("name","dress_part[]").val(dress_item["id"]).appendTo(nd);
}

/*
* rwdImageMaps jQuery plugin v1.5
*
* Allows image maps to be used in a responsive design by recalculating the area coordinates to match the actual image size on load and window.resize
*
* Copyright (c) 2013 Matt Stow
* https://github.com/stowball/jQuery-rwdImageMaps
* http://mattstow.com
* Licensed under the MIT license
*/
;(function(a){a.fn.rwdImageMaps=function(){var c=this;var b=function(){c.each(function(){if(typeof(a(this).attr("usemap"))=="undefined"){return}var e=this,d=a(e);a("<img />").load(function(){var g="width",m="height",n=d.attr(g),j=d.attr(m);if(!n||!j){var o=new Image();o.src=d.attr("src");if(!n){n=o.width}if(!j){j=o.height}}var f=d.width()/100,k=d.height()/100,i=d.attr("usemap").replace("#",""),l="coords";a('map[name="'+i+'"]').find("area").each(function(){var r=a(this);if(!r.data(l)){r.data(l,r.attr(l))}var q=r.data(l).split(","),p=new Array(q.length);for(var h=0;h<p.length;++h){if(h%2===0){p[h]=parseInt(((q[h]/n)*100)*f)}else{p[h]=parseInt(((q[h]/j)*100)*k)}}r.attr(l,p.toString())})}).attr("src",d.attr("src"))})};a(window).resize(b).trigger("resize");return this}})(jQuery);